@using ASP_P22.Models.User
@model UserSignUpPageModel   // тут тільки тип, сама модель - Model
@{
    ViewData["Title"] = "Користувачі";
    bool? validationStatus = Model.ValidationStatus;
    Dictionary<String, String>? errors = Model.Errors;
    UserSignUpFormModel? formModel = Model.FormModel;
}

<div class="text-center">
    <h1 class="display-4">Реєстрація нового користувача</h1>
</div>
@if (Model.User != null)
{
    <h2>Реєстрація пройшла успішно</h2>
}
else
{
    <form asp-action="SignUp" method="post" enctype="multipart/form-data">
        <div class="row">
            <div class="col">
                <div class="input-group mb-3">
                    <span class="input-group-text" id="name-addon"><i class="bi bi-person-vcard"></i></span>
                    @{
                        bool hasError = validationStatus == false && (errors?.ContainsKey("UserName") ?? false);
                    }
                    <input name="UserName" type="text" 
                    class="form-control @(hasError ? "is-invalid" : (validationStatus != null) ? "is-valid" : "")"
                    placeholder="Ім'я" 
                    value="@(formModel?.UserName)"
                    aria-label="Username" aria-describedby="name-addon">
                    @if (hasError)
                    {
                        <div class="invalid-feedback">@(errors?["UserName"])</div>
                    }

                </div>
            </div>
            <div class="col">
                <div class="input-group mb-3">
                    <span class="input-group-text" id="email-addon"><i class="bi bi-envelope-at"></i></span>
                    @{
                        hasError = validationStatus == false && (errors?.ContainsKey("UserEmail") ?? false);
                    }
                    <input name="UserEmail" type="email" 
                    class="form-control @(hasError ? "is-invalid" : (validationStatus != null) ? "is-valid" : "")"
                    placeholder="E-mail"
                    value="@(formModel?.UserEmail)"
                    aria-label="Email" aria-describedby="email-addon">
                    @if (hasError)
                    {
                        <div class="invalid-feedback">@(errors?["UserEmail"])</div>
                    }
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="input-group mb-3">
                    <span class="input-group-text" id="phone-addon"><i class="bi bi-person-vcard"></i></span>
                    @{
                        hasError = validationStatus == false && (errors?.ContainsKey("UserPhone") ?? false);
                    }
                    <input name="UserPhone" type="text"
                           class="form-control @(hasError ? "is-invalid" : (validationStatus != null) ? "is-valid" : "")"
                           placeholder="Ім'я"
                           value="@(formModel?.UserPhone)"
                           aria-label="UserPhone" aria-describedby="phone-addon">
                    @if (hasError)
                    {
                        <div class="invalid-feedback">@(errors?["UserPhone"])</div>
                    }

                </div>
            </div>
            <div class="col">
                <div class="input-group mb-3">
                    <span class="input-group-text" id="position-addon"><i class="bi bi-envelope-at"></i></span>
                    @{
                        hasError = validationStatus == false && (errors?.ContainsKey("UserPosition") ?? false);
                    }
                    <input name="UserPosition" type="text"
                           class="form-control @(hasError ? "is-invalid" : (validationStatus != null) ? "is-valid" : "")"
                           placeholder="Посада"
                           value="@(formModel?.UserPosition)"
                           aria-label="Position" aria-describedby="position-addon">
                    @if (hasError)
                    {
                        <div class="invalid-feedback">@(errors?["UserPosition"])</div>
                    }
                </div>
            </div>
        </div>



        <div class="row">
            <div class="col">
                <div class="input-group mb-3">
                    <span class="input-group-text" id="login-addon"><i class="bi bi-key"></i></span>
                    @{
                        hasError = validationStatus == false && (errors?.ContainsKey("UserLogin") ?? false);
                    }
                    <input name="UserLogin" type="text" 
                    class="form-control @(hasError ? "is-invalid" : (validationStatus != null) ? "is-valid" : "")"
                    placeholder="Логін"
                    value="@(formModel?.UserLogin)"
                    aria-label="Login" aria-describedby="login-addon">
                    @if (hasError)
                    {
                        <div class="invalid-feedback">@(errors?["UserLogin"])</div>
                    }
                </div>
            </div>
            <div class="col">
                <div class="input-group mb-3">
                    <label class="input-group-text" for="inputGroupFile01"><i class="bi bi-person-circle"></i></label>
                    <input type="file" name="UserPhoto" class="form-control" id="inputGroupFile01">
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col">
                <div class="input-group mb-3">
                    <span class="input-group-text" id="password1-addon"><i class="bi bi-lock"></i></span>
                    <input name="Password1" type="password" class="form-control" placeholder="*********" aria-label="Password" aria-describedby="password1-addon">
                </div>
            </div>
            <div class="col">
                <div class="input-group mb-3">
                    <span class="input-group-text" id="password2-addon"><i class="bi bi-unlock"></i></span>
    <input name="Password2" type="password" class="form-control" placeholder="*********" aria-label="Password" aria-describedby="password2-addon">
    </div>
    </div>
    </div>

    <button type="submit" class="btn btn-outline-secondary">Зареєструватися</button>
    </form>
}
<hr/>

<h2>Моделі в ASP</h2>
<p>
    З метою передачі комплексних даних в ASP вживаються моделі. 
    Це класи, які мають лише властивості (без методів) і призначені для 
    поєднання різних даних до однієї "капсули"
</p>
<p>
    Моделі поділяють на:
    моделі форм (FormModel),
    моделі представлень (ViewModel / PageModel),
    моделі даних (Entity)
</p>

@Html.DisplayFor(m => ViewData["formModel"])
