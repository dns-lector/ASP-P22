@{
    ViewData["Title"] = "Razor";
}

<div class="text-center">
    <h1 class="display-4">Технологія Razor</h1>
</div>

<p>
    Razor - технологія розширення HTML, додає до нього інструменти,
    характерні мовам програмування. 
</p>
<ul>
    <li>Вирази (expressions) - інструкції, що мають результат</li>
    <li>Змінні</li>
    <li>Умовні конструкції</li>
    <li>Циклічні конструкції</li>
</ul>
<p>
    Основою Razor є символ <code>&commat;</code>, через що сам символ слід вживати через
    html-сутність <code>&amp;commat;</code>
</p>
<h2>Вирази</h2>
<p>
    Вирази вміщуються у конструкцію <code>&commat;(2 + 3)</code>
    Вираз у круглих дужках обчислюється та його значення вставляється в HTML 
    у тому місці, де вираз зазначено
    <code>&commat;(2 + 3) = @(2 + 3)</code>.
    У виразах доступні усі засоби C# <code>&commat;(Math.Sqrt(2)) = @(Math.Sqrt(2))</code>.
    Якщо вираз має зрозумілі межі, то можна не писати круглі дужки
    <code>&commat;Math.Sqrt(2) = @Math.Sqrt(2)</code>
</p>
<h2>Змінні</h2>
<p>
    Змінні, а також інструкції без результатів (statements), вміщуються у 
    <code>&commat;{ int x = 10; }</code>
    @{
        int x = 10;
    }
    Після оголошення змінні можна виводити за допомогою виразів 
    <code>&commat;x = @x</code>
</p>
<h2>Умовні конструкції</h2>
<p>
    Задаються оператором, якому передує &commat;:
    <pre>
        &commat;if(x % 2 == 0)
        {
        &lt;b&gt;число х - парне&lt;/b&gt;
        }
        else
        {
        &lt;i&gt;число х - непарне&lt;/i&gt;
        }
    </pre>

    @if(x % 2 == 0)
    {
        x++;
        <b>число х - парне</b>
    }
    else
    {
        <i>число х - непарне</i>
        x--;
    }
    <br/>
    Особливістю Razor є те, що він сам намагається визначити який тип інструкції 
    наведено у блоці - код чи розмітка. Код виконується, візуального ефекту від 
    цього немає. Розмітка передається в HTML і не бере участь в обчисленнях.
    Відмінність визначається через наявність тегів, тому надписи без тегів 
    залишати украй не рекомендується. 
</p>
<h2>Цикли</h2>
<p>
    Аналогічно до умовного оператора, циклові оператори вживаються з префіксом &commat;.
    Підтримуються усі типи циклів - умовні, лічильники, ітератори.
</p>
<pre>
    &commat;for (int i = 1; i &lt;= 5; ++i)
    {
    &lt;span style="font-size: &commat;(i*2 + 10)px"&gt;
    &commat;i
    &lt;/&lt;span&gt;
    }
</pre>
@for(int i = 1; i <= 5; ++i)
{
    <span style="font-size: @(i*2 + 10)px">
        @i
    </span>
}
<p>
    Вирази, у т.ч. для циклової змінної, можна вживати як для контенту тегів, так і 
    для значень атрибутів, зокрема, стильових. Проте, є обмеження - виразами не 
    можна формувати імена тегів та імена атрибутів.
</p>
@{
    Dictionary<String, double> priceList = new() {
        { "Кулька ялинкова", 29.90 },
        { "Серпантин", 45 },
        { "Вогні бенгальські", 84.40 },
        { "Гирлянда 3м", 129.90 },
        { "Ялинка штучна 1.5м", 1229.90 },
    };
}
@foreach(var (name,price) in priceList)
{
    <div>@name -- @price грн.</div>
}
<pre>
    Д.З. Реалізувати відображення прайс-листу (створеного на занятті)
    у вигляді HTML-таблиці 
    -----------------------------
    1 | Кулька ялинкова | 29.90
    ....
    Забезпечити виведення двох знаків після коми (у ціні), а також 
    нумерацію товарів (перший рядок таблиці)
    У відповідь на ДЗ прикласти посилання на репозиторій, у репозиторії
    додати скріншоти роботи проєкту 
</pre>